/*Первичные ключи, ограничения уникальности, внешние ключи, подчиненные таблицы с аналитическими функциями*/
WITH aLLTABLES AS (
    SELECT table_name FROM user_tables
    ORDER BY table_name
),

pkeys AS (
    SELECT t1.table_name, constraint_name, t2.column_name, 
    ROW_NUMBER() OVER(PARTITION BY t1.table_name, constraint_name ORDER BY t2.column_name) as col_num
    FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
    WHERE t1.constraint_type = 'P'
    ORDER BY t1.table_name
),
pkeys_listed AS (
    SELECT table_name, LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') as pk
    FROM pkeys
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH col_num =1 
    CONNECT BY PRIOR col_num = col_num -1 AND PRIOR table_name = table_name AND PRIOR constraint_name = constraint_name
    ORDER BY table_name
),
unq AS (
    SELECT t1.table_name, constraint_name, t2.column_name, 
    ROW_NUMBER() OVER(PARTITION BY t1.table_name, constraint_name ORDER BY t2.column_name) as col_num
    FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
    WHERE t1.constraint_type = 'U'
    ORDER BY t1.table_name, constraint_name
     
),

unq_listed AS (
    SELECT ROW_NUMBER() OVER(PARTITION BY table_name ORDER BY constraint_name) as unum,
    table_name, CASE WHEN LEVEL = 1 THEN LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') 
    ELSE '(' || LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') || ')' END as u
    FROM unq
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH col_num =1 
    CONNECT BY PRIOR col_num = col_num -1 AND PRIOR table_name = table_name AND PRIOR constraint_name = constraint_name
    ORDER BY table_name, u
),
unq_listed2 AS (
    SELECT  table_name, LTRIM(SYS_CONNECT_BY_PATH(u, '; '), '; ') as u
    FROM unq_listed
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH unum =1 
    CONNECT BY PRIOR unum = unum - 1 AND PRIOR table_name = table_name 
    ORDER BY table_name
),

fkeys AS (
    SELECT t1.table_name, constraint_name, t2.column_name, 
    ROW_NUMBER() OVER(PARTITION BY t1.table_name, constraint_name ORDER BY t2.column_name) as col_num
    FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
    WHERE t1.constraint_type = 'R'
    ORDER BY t1.table_name
),
fkeys_listed AS (
    SELECT ROW_NUMBER() OVER(PARTITION BY table_name ORDER BY constraint_name) as fnum,
    table_name,  CASE WHEN LEVEL = 1 THEN LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') 
    ELSE '(' || LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') || ')' END as fk
    FROM fkeys
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH col_num =1 
    CONNECT BY PRIOR col_num = col_num -1 AND PRIOR table_name = table_name 
    ORDER BY table_name
) ,
fkeys_listed2 AS (
    SELECT  table_name, LTRIM(SYS_CONNECT_BY_PATH(fk, '; '), '; ') as fk
    FROM fkeys_listed
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH fnum =1 
    CONNECT BY PRIOR fnum = fnum - 1 AND PRIOR table_name = table_name 
    ORDER BY table_name
),

pod_tab AS (
SELECT t1.table_name as pod, t2.table_name as glav,
ROW_NUMBER() OVER(PARTITION BY t2.table_name ORDER BY t1.table_name) as tab_num
FROM user_constraints t1 LEFT OUTER JOIN user_constraints t2 ON (t1.r_constraint_name = t2.constraint_name)
ORDER BY t2.table_name
),
pod_listed AS (
    SELECT glav as table_name, LTRIM(SYS_CONNECT_BY_PATH(pod, ', '), ', ') as pods
    FROM pod_tab
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH tab_num =1 
    CONNECT BY PRIOR tab_num = tab_num -1 AND PRIOR glav = glav 
    ORDER BY table_name
)

SELECT t1.table_name as "Имя таблицы",
NVL(t2.pk, 'Первичного ключа не имеет') as "Первичный ключ",
NVL(t3.u, 'Ограничений уникальности не имеет') as "Ограничения UNIQUE",
NVL(t4.fk, 'Ограничений внешнего ключа не имеет') as "Внешний ключ",
NVL(t5.pods, 'Подчиненных таблиц не имеет') as "Подчиненные таблицы"
FROM alltables t1 LEFT OUTER JOIN pkeys_listed t2 ON (t1.table_name = t2.table_name)
LEFT OUTER JOIN unq_listed2 t3 ON (t1.table_name = t3.table_name)
LEFT OUTER JOIN fkeys_listed2 t4 ON (t1.table_name = t4.table_name)
LEFT OUTER JOIN pod_listed t5 ON (t1.table_name = t5.table_name)
ORDER BY t1.table_name;

/*Первичные ключи, ограничения уникальности, внешние ключи, подчиненные таблицы без аналитических функций*/

WITH alltables AS (
    SElECT table_name FROM user_tables
    ORDER BY table_name
),

pkeys AS (
    SELECT t1.table_name, constraint_name, t2.column_name
    FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
    WHERE t1.constraint_type = 'P'
    ORDER BY t1.table_name 
),
pkeys_num AS (
    SELECT l.table_name, l.constraint_name, l.column_name, COUNT(r.column_name) + 1 as col_num
    FROM pkeys l LEFT OUTER JOIN pkeys r ON (l.table_name = r.table_name AND 
    l.constraint_name = r.constraint_name AND l.column_name < r.column_name)
    GROUP BY l.table_name, l.constraint_name, l.column_name 
    ORDER BY l.table_name
),

pkeys_listed AS (
    SELECT table_name, LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') as pk
    FROM pkeys_num
    WHERE CONNECT_BY_ISLEAF = 1
    --START WITH col_num = 1 
    CONNECT BY PRIOR col_num -1 = col_num  AND PRIOR table_name = table_name
    AND prior constraint_name = constraint_name
    ORDER BY table_name
),
pk_listed2 AS (
    SELECT table_name, pk, LENGTH(pk) as len
    FROM pkeys_listed
    ORDER By table_name, len
),
pk_listed3 AS (
    SELECT l.table_name, l.pk, COUNT(r.pk)+1 as pk_num
    FROM pk_listed2 l LEFT OUTER JOIN pk_listed2 r ON (l.table_name = r.table_name
    AND l.len < r.len)
    GROUP BY l.table_name, l.pk
    ORDER BY l.table_name
),
pk_listed4 AS (
    SELECT table_name, pk
    FROM pk_listed3
    WHERE pk_num = 1
),
unq AS (
    SELECT t1.table_name, constraint_name, t2.column_name
    FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
    WHERE t1.constraint_type = 'U'
    ORDER BY t1.table_name 
),
unq_num1 AS (
    SELECT l.table_name, l.constraint_name, l.column_name, COUNT(r.column_name) + 1 as col_num
    FROM unq l LEFT OUTER JOIN unq r ON (l.table_name = r.table_name AND 
    l.constraint_name = r.constraint_name AND l.column_name < r.column_name)
    GROUP BY l.table_name, l.constraint_name, l.column_name 
    ORDER BY l.table_name
),
unq_listed1 AS (
    SELECT table_name, constraint_name, CASE WHEN LEVEL = 1 THEN LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') 
    ELSE '(' || LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') || ')' END as u
    FROM unq_num1
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH col_num = 1 
    CONNECT BY PRIOR col_num = col_num -1 AND PRIOR table_name = table_name
    AND prior constraint_name = constraint_name
    ORDER BY table_name, constraint_name
),
unq_num2 AS (
    SELECT l.table_name, l.constraint_name, l.u, COUNT(r.u) + 1 as cons_num
    FROM unq_listed1 l LEFT OUTER JOIN unq_listed1 r ON (l.table_name = r.table_name 
    AND l.u < r.u)
    GROUP BY l.table_name, l.constraint_name, l.u 
    ORDER BY l.table_name, l.constraint_name
),
unq_listed2 AS (
    SELECT table_name,  LTRIM(SYS_CONNECT_BY_PATH(u, '; '), '; ') as u
    FROM unq_num2
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH cons_num = 1 
    CONNECT BY PRIOR cons_num = cons_num -1 AND PRIOR table_name = table_name
    
    ORDER BY table_name
),
fk AS (
    SELECT t1.table_name, constraint_name, t2.column_name
    FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
    WHERE t1.constraint_type = 'R'
    ORDER BY t1.table_name 
),
fk_num1 AS (
    SELECT l.table_name, l.constraint_name, l.column_name, COUNT(r.column_name) + 1 as col_num
    FROM fk l LEFT OUTER JOIN fk r ON (l.table_name = r.table_name AND 
    l.constraint_name = r.constraint_name AND l.column_name < r.column_name)
    GROUP BY l.table_name, l.constraint_name, l.column_name 
    ORDER BY l.table_name
),

fk_listed1 AS (
    SELECT table_name, constraint_name, CASE WHEN LEVEL = 1 THEN LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') 
    ELSE '(' || LTRIM(SYS_CONNECT_BY_PATH(column_name, ', '), ', ') || ')' END as fk, col_num, level, connect_by_isleaf
    FROM fk_num1
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH col_num = 1 
    CONNECT BY PRIOR col_num = col_num -1 AND PRIOR table_name = table_name
    AND prior constraint_name = constraint_name
    ORDER BY table_name, constraint_name
),
fk_num2 AS (
    SELECT l.table_name, l.constraint_name, l.fk, COUNT(r.fk) + 1 as cons_num
    FROM fk_listed1 l LEFT OUTER JOIN fk_listed1 r ON (l.table_name = r.table_name 
    AND l.fk < r.fk)
    GROUP BY l.table_name, l.constraint_name, l.fk 
    ORDER BY l.table_name, l.constraint_name
),
fk_listed2 AS (
    SELECT table_name,  LTRIM(SYS_CONNECT_BY_PATH(fk, '; '), '; ') as fk
    FROM fk_num2
    WHERE CONNECT_BY_ISLEAF = 1
    START WITH cons_num = 1 
    CONNECT BY PRIOR cons_num = cons_num -1 AND PRIOR table_name = table_name
    
    ORDER BY table_name
),
pod AS (
    SELECT t1.table_name as pod, t2.table_name as glav
    FROM user_constraints t1 LEFT OUTER JOIN user_constraints t2 ON (t1.r_constraint_name = t2.constraint_name)
    ORDER BY t1.table_name 
),
pod_num AS (
    SELECT l.glav, l.pod, COUNT(r.pod) + 1 as tab_num
    FROM pod l LEFT OUTER JOIN pod r ON (l.glav = r.glav AND l.pod < r.pod)
    GROUP BY l.glav, l.pod
    ORDER BY l.glav, l.pod
),

pod_listed AS (
    SELECT glav as table_name, LTRIM(SYS_CONNECT_BY_PATH(pod, ', '), ', ') as pod
    FROM pod_num
    WHERE CONNECT_BY_ISLEAF = 1 
   -- START WITH tab_num = 1 
    CONNECT BY PRIOR tab_num -1 = tab_num AND PRIOR glav = glav
    ORDER BY table_name
),
pod_listed2 AS (
    SELECT table_name, pod, LENGTH(pod) as len
    FROM pod_listed
    ORDER By table_name, len
),
pod_listed3 AS (
    SELECT l.table_name, l.pod, COUNT(r.pod)+1 as pod_num
    FROM pod_listed2 l LEFT OUTER JOIN pod_listed2 r ON (l.table_name = r.table_name
    AND l.len < r.len)
    GROUP BY l.table_name, l.pod
    ORDER BY l.table_name
),
pod_listed4 AS (
    SELECT table_name, pod
    FROM pod_listed3
    WHERE pod_num = 1
)
SELECT t1.table_name as "Имя таблицы",
NVL(t2.pk, 'Первичного ключа не имеет') as "Первичный ключ",
NVL(t3.u, 'Ограничений уникальности не имеет') as "Ограничения UNIQUE",
NVL(t4.fk, 'Ограничений внешнего ключа не имеет') as "Внешний ключ",
NVL(t5.pod, 'Подчиненных таблиц не имеет') as "Подчиненные таблицы"
FROM alltables t1 LEFT OUTER JOIN pk_listed4 t2 ON (t1.table_name = t2.table_name)
LEFT OUTER JOIN unq_listed2 t3 ON (t1.table_name = t3.table_name)
LEFT OUTER JOIN fk_listed2 t4 ON (t1.table_name = t4.table_name)
LEFT OUTER JOIN pod_listed4 t5 ON (t1.table_name = t5.table_name)
ORDER BY t1.table_name;