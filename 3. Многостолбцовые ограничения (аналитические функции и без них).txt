/*многостолбцовые ограничения с аналитическими функциями */

WITH tmp1 AS (
SELECT 
DISTINCT t1.table_name, 
constraint_name, t1.constraint_type, 
COUNT(t2.column_name) OVER (PARTITION BY constraint_name ORDER BY constraint_name) as cols_number
FROM user_constraints t1 LEFT OUTER JOIN user_cons_columns t2 USING (constraint_name)
ORDER BY 1
),
tmp2 AS (
    SELECT 
    table_name, ROW_NUMBER() OVER(PARTITION BY table_name ORDER BY constraint_name) as cons_num,
    constraint_name, constraint_type, cols_number,
    COUNT(constraint_name) OVER (PARTITION BY table_name ORDER BY constraint_name) as cons_number
    FROM tmp1
    WHERE cols_number > 1
    ORDER BY 2, 3 asc
    
),
tmp3 AS (
    SELECT DISTINCT table_name 
    FROM tmp2
    ORDER BY 1
), 
tmp4 AS (
    SELECT ROWNUM as table_number, table_name
    FROM tmp3
    ORDER BY 1

),
tmp5 AS(
    SELECT  t2.table_number, table_name, t1.cons_num, t1.constraint_name, t1.constraint_type, t1.cols_number, t1.cons_number
    FROM tmp2 t1 LEFT OUTER JOIN tmp4 t2 USING(table_name)
    ORDER BY 1, 3
)

SELECT CASE cons_num WHEN 1 THEN TO_CHAR(table_number) ELSE ' ' END as "Номер таблицы",
       CASE cons_num WHEN 1 THEN table_name ELSE ' ' END as "Имя таблицы",
       cons_num as "Номер ограничения", constraint_name as "Имя ограничения", 
       CASE constraint_type WHEN 'P' THEN 'Первичный ключ'
                            WHEN 'U' THEN 'Ограничение типа UNIQUE'
                            WHEN 'C' THEN 'Ограничение типа CHECK'
                            WHEN 'R' THEN 'Внешний ключ' END as "Тип ограничения", 
        cols_number as "Количество столбцов ", 
       CASE cons_num WHEN 1 THEN TO_CHAR(cons_number) ELSE ' ' END as "Кол-во многостолбцовых огр-ий"
       FROM tmp5;
       
/*Многостолбцовые ограничения без аналитических функций*/
WITH cons AS (
    SELECT t1.table_name, constraint_name, t1.constraint_type, t2.column_name
    FROM user_constraints t1 LEFT OUTER JOIN  user_cons_columns t2 USING (constraint_name)
),

cols_number AS (
    SELECT L.table_name, L.constraint_name, L.constraint_type, COUNT(R.column_name)+1 as col_num
    FROM cons L LEFT OUTER JOIN cons R 
    ON L.table_name = R.table_name AND L.constraint_name = R.constraint_name
    AND L.column_name < R.column_name
    GROUP BY L.table_name, L.constraint_name, L.constraint_type
),

many_cols_cons AS (
    SELECT table_name, constraint_name, constraint_type, col_num
    FROM cols_number
    WHERE col_num > 1
),

cons_number AS (
    SELECT L.table_name, L.constraint_name, L.col_num, L.constraint_type, COUNT(R.constraint_name)+1 as cons_num
    FROM many_cols_cons L LEFT OUTER JOIN many_cols_cons R
    ON L.table_name = R.table_name AND L.constraint_name < R.constraint_name
    GROUP BY L.table_name, L.constraint_name, L.col_num, L.constraint_type
    ORDER BY 1, 3
),
cons_numbered AS (
    SELECT L.table_name, COUNT(R.constraint_name)+1 as cons_number
    FROM many_cols_cons L LEFT OUTER JOIN many_cols_cons R
    ON L.table_name = R.table_name AND L.constraint_name < R.constraint_name
    GROUP BY L.table_name
    ORDER BY 1, 2
),
table_names AS (
    SELECT DISTINCT table_name FROM many_cols_cons
    ORDER BY 1
),
table_number AS (
    SELECT ROWNUM as table_number, table_name
    FROM table_names
    ORDER BY 2
) 

SELECT CASE t1.cons_num WHEN 1 THEN TO_CHAR(t2.table_number) ELSE ' ' END as "Номер таблицы",
    CASE t1.cons_num WHEN 1 THEN t1.table_name ELSE ' ' END as "Имя таблицы",
    t1.cons_num as "Номер ограничения", t1.constraint_name as "Имя ограничения",
    CASE constraint_type WHEN 'P' THEN 'Первичный ключ' 
                         WHEN 'R' THEN 'Внешний ключ' 
                         WHEN 'U' THEN 'Ограничение типа UNIQUE' 
                         WHEN 'C' THEN 'Ограничение типа CHECK' END as "Тип ограничения",
    col_num as "Количество столбцов", 
    CASE t1.cons_num WHEN 1 THEN TO_CHAR(t3.cons_number) ELSE ' ' END as "Кол-во многостолбцовых огр-ий"
    FROM cons_number t1 LEFT OUTER JOIN table_number t2 ON (t1.table_name = t2.table_name)
    LEFT OUTER JOIN cons_numbered t3 ON (t1.table_name = t3.table_name)
    ORDER BY t1.table_name, t1.cons_num;